---

# 1. Check for undefined properties that do not have a default
# -----------------------------------------------------------------------------
- name: "Fail if mas_instance_id is not provided"
  when: mas_instance_id is not defined or mas_instance_id == ""
  fail:
    msg: "mas_instance_id property is required"

- name: "Fail if mas_config_dir is not provided"
  when: mas_config_dir is not defined or mas_config_dir == ""
  fail:
    msg: "mas_config_dir property is required"

- name: "Fail if  is not provided"
  when:
    - ibm_cloud_apikey is not defined or ibm_cloud_apikey == ""
    - useibmcos is defined and useibmcos
  fail:
    msg: "ibm_cloud_apikey property is required"

- name: "Fail if  is not provided"
  when:
    - ibm_cloud_org is not defined or ibm_cloud_org == ""
    - useibmcos is defined and useibmcos
  fail:
    msg: "ibm_cloud_org property is required"

- name: "Fail if  is not provided"
  when:
    - ibm_cloud_space is not defined or ibm_cloud_space == ""
    - useibmcos is defined and useibmcos
  fail:
    msg: "ibm_cloud_space property is required"


- name: "cos/ibmcos: check if it's IBM managed OCP based on existing storage class"
  when:
    - useibmcos is defined and useibmcos
  block:
    - name: "cos/ibmcos :set cos info"
      set_fact:
        cosurl: "https://s3.us.cloud-object-storage.appdomain.cloud"
        cosusername: "ibmcloud-iam-apikey"
    - name: "cos/ibmcos :set cos info"
      include_tasks: tasks/ibmcos.yml
    - name: "cos/ibmcos :set cos info password" 
      set_fact:
        cospassword: "{{ ASSIST_COS_PASS }}"
    - name: Print the cos info
      debug:
        msg:
          - "cos url ........ {{ cosurl }}"
          - "cos username/accesskey ......... {{ cosusername }}"
          - "cos password/secretkey ......... {{ cospassword }}"
  rescue:
    - name: Fail when ASSIST_COS_PASS is not retrieved
      fail:
        msg: "We Couldn't get the OCS cluster instance or IBM Cloud Object storage"

# 1. Configure cos config based on ocs or cloud object storage
# -----------------------------------------------------------------------------
- name: "cos/ocs: check if it's IBM managed OCP based on existing storage class"
  when:
    - not ( useibmcos is defined and useibmcos )  
  include_tasks: tasks/objectstorage.yml

# 2. Create coscfg.yml
# -----------------------------------------------------------------------------
- name: "ocs/objectstorage : Debug information"
  block:
    - name: Copy objectstorageCfg to filesytem
      when: not ( useibmcos is defined and useibmcos )
      vars:
        instanceId: "{{ mas_instance_id }}"
      ansible.builtin.template:
        src: objectaccess/objectstoragecfg.yml.j2
        dest: "{{ mas_config_dir }}/objectstoragecfg.yml"
    - name: Copy objectstorageCfg to filesytem
      when: useibmcos is defined and useibmcos
      vars:
        instanceId: "{{ mas_instance_id }}"
      ansible.builtin.template:
        src: objectaccess/cloudobjectstoragecfg.yml.j2
        dest: "{{ mas_config_dir }}/objectstoragecfg.yml"
