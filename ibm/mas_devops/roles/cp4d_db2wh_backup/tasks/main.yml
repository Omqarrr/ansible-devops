---
# Should should be part of the manage operator, but is not so we have to do it
# as a seperate step in the install flow for now :(

# 1. Provide debug information to the user
# -----------------------------------------------------------------------------
- name: "Debug information"
  debug:
    msg:
      - "CPD Namespace .......................... {{ cpd_meta_namespace }}"
      - "DB2 Instance ID ........................ {{ db2wh_instance_id }}"

# 3. Determine which pod to run in
# -----------------------------------------------------------------------------
- name: "Lookup db2 Pod"
  community.kubernetes.k8s_info:
    kind: Pod
    namespace: "{{ cpd_meta_namespace }}"
    label_selectors:
      - type=engine
      - app={{ db2wh_instance_id }}
  register: db2wh_pod

- name: Configure facts
  set_fact:
    db2wh_pod_name: "{{ db2wh_pod.resources[0].metadata.name }}"

- name: "Debug information - Part 3"
  debug:
    msg:
      - "Pod name ........... {{ db2wh_pod_name }}"

- name: "Copying DB2 backup script to DB2WH pod {{ db2wh_instance_id }}..."
  shell: | 
    oc cp -n {{ cpd_meta_namespace }} {{ role_path }}/files/backupDB.sh c-{{ db2wh_instance_id }}-db2u-0:{{ db2wh_script_path }}
  register: copy_output

- debug:
    msg: "{{ copy_output }}"

- name: "Applying permissions to run DB2 backup script DB2WH pod {{ db2wh_instance_id }}..."
  shell: | 
    oc exec -it -n {{ cpd_meta_namespace }} c-{{ db2wh_instance_id }}-db2u-0 -- bash -c "chmod 755 {{ db2wh_script_path }}"
  register: apply_output

- debug:
    msg: "{{ apply_output }}"

- name: "Running backup script on DB2WH pod {{ db2wh_instance_id }} as db2inst username...(this can take several minutes)"
  shell: | 
    oc exec -it -n {{ cpd_meta_namespace }} c-{{ db2wh_instance_id }}-db2u-0 -- su -lc {{ db2wh_script_path }} db2inst1
  register: generate_backup_output

- debug:
    msg: "{{ generate_backup_output.stdout_lines }}"

# #===================================================================================================================
# # COPY THE FILE FROM THE POD TO A TARGET MACHINE
# #===================================================================================================================

- name: "Creating backup folder in {{ db2wh_instance_id }}..."
  shell: | 
    oc exec -it -n {{ cpd_meta_namespace }} c-{{ db2wh_instance_id }}-db2u-0 -- bash -c "sudo mkdir db_backup"
  register: creating_backup_folder_output

- debug:
    msg: "{{ creating_backup_folder_output }}"

- name: "Copying backup files to backup folder in {{ db2wh_instance_id }}..."
  shell: | 
    oc exec -it -n {{ cpd_meta_namespace }} c-{{ db2wh_instance_id }}-db2u-0 -- bash -c "sudo cp /mnt/blumeta0/home/db2inst1/db_backup/* /db_backup"
  register: copy_backup_folder_output

- debug:
    msg: "{{ copy_backup_folder_output }}"

- name: "Copying backup .p12 files to backup folder in {{ db2wh_instance_id }}..."
  shell: | 
    oc exec -it -n {{ cpd_meta_namespace }} c-{{ db2wh_instance_id }}-db2u-0 -- bash -c "sudo cp -a /mnt/blumeta0/db2/keystore/. /db_backup"
  register: copy_bkp_locally_output

- name: "Applying db2uadm permissions to copy backup files from {{ db2wh_instance_id }}..."
  shell: | 
    oc exec -it -n {{ cpd_meta_namespace }} c-{{ db2wh_instance_id }}-db2u-0 -- bash -c "sudo chown db2uadm /db_backup/*"
  register: apply_db2uadm_output

- name: "Copying backup file from {{ db2wh_instance_id }} pod to your local machine... (this can take several minutes)"
  shell: | 
    oc rsync --progress=true -n {{ cpd_meta_namespace }} c-{{ db2wh_instance_id }}-db2u-0:/db_backup/. {{ db2wh_backup_folder }}
  register: copy_bkp_locally_output

- debug:
    msg: "{{ copy_bkp_locally_output }}"
