- name: "Fail if mas_instance_id is not provided"
  when: mas_instance_id is not defined or mas_instance_id == ""
  fail:
    msg: "mas_instance_id property is required"

- name: "Fail if mas_config_dir is not provided"
  when: mas_config_dir is not defined or mas_config_dir == ""
  fail:
    msg: "mas_config_dir property is required"

- name: "Fail if assist_wds_pass is not provided if you use external discovery"
  when:
    - assist_wds_pass is not defined or assist_wds_pass == ""
    - useexternalwds is defined and useexternalwds
  fail:
    msg: "assist_wds_pass property is required"

- name: "Fail if assist_wds_admin is not provided if you use external discovery"
  when:
    - assist_wds_admin is not defined or assist_wds_admin == ""
    - useexternalwds is defined and useexternalwds
  fail:
    msg: "assist_wds_admin property is required"

- name: "Fail if assist_wds_url is not provided if you use external discovery"
  when:
    - assist_wds_url is not defined or assist_wds_url == ""
    - useexternalwds is defined and useexternalwds
  fail:
    msg: "assist_wds_url property is required"


- name: "cp4d/wds: Set and Print the external Discovery login URL and Credential for use"
  when:
    - useexternalwds is defined and useexternalwds
  block:
    - name: Get the CP4D instanceurl
      set_fact:
        wds_admin_username: "{{ assist_wds_admin }}"
        wds_admin_password: "{{ assist_wds_pass }}"
        wds_url: "{{ assist_wds_url  }}"
    - name: Print the WDS related info
      debug:
        msg:
          - "WDS url      .... {{ wds_url }}"
          - "WDS Admin    .... {{ wds_admin_username }}"
          - "WDS Passw0rd .... {{ wds_admin_password }}"

- name: "cp4d/wds: Prepare and setup Embedded Discovery instance on the existing CP4D"
  when:
    - not ( useexternalwds is defined and useexternalwds ) 
  include_tasks: tasks/embeddedwds.yml
  
- name: Copy WDS secret to filesytem
  vars:
    instanceId: "{{ mas_instance_id }}"
  ansible.builtin.template:
    src: wdscfg.yml.j2
    dest: "{{ mas_config_dir }}/wdscfg.yml"

