---

mas_catalog_source: "{{ lookup('env', 'MAS_CATALOG_SOURCE') | default('ibm-operator-catalog', true) }}"
mas_instance_id: "{{ lookup('env', 'MAS_INSTANCE_ID') }}"
mas_namespace: "mas-{{ mas_instance_id }}-core"

mas_upgrade_supported_channels: ['maint86xdev', '8.6.x']

# TODO: Set this to target channel for the 8.7 release when available
# When using pre-release development catalog source, this can be set to m3dev87
mas_upgrade_target_channel: m3dev87

mas_app_upgrade_supported_channels:
  assist: []
  hputilities: ['8.2.x']
  iot: ['8.4.x']
  manage: ['8.2.x']
  monitor: ['8.6.x']
  predict: ['8.4.x']
  safety: ['8.2.x']
  visualinspection: []

# TODO: Set these to target channels for the 8.7 releases when available
# When using pre-release development catalog sources, these can be set to any 8.7 development channel
mas_app_upgrade_target_channels:
  assist: 8.x
  hputilities: 8.x
  iot: m3dev87
  manage: 8.x
  monitor: 8.x
  predict: 8.x
  safety: 8.x
  visualinspection: 8.x

common_services_namespace: ibm-common-services

# default_custom_cluster_issuer: "cis-letsencrypt-production-{{ mas_instance_id }}"
# custom_cluster_issuer: "{{ lookup('env', 'MAS_CUSTOM_CLUSTER_ISSUER') | default(default_custom_cluster_issuer, true), lookup('env', 'MAS_CUSTOM_CLUSTER_ISSUER') | default(None, true) }}"

cert_names:
  # CA for signing all the individual certs for internal use
  internal_ca: "{{ mas_instance_id }}-cert-internal-ca"
  # public certs
  public: "{{ mas_instance_id }}-cert-public"
  public_ca: "{{ mas_instance_id }}-cert-public-ca"

internal_certificate_issuer:
  name: "{{ mas_namespace }}-internal-issuer"

internal_ca_issuer:
  name: "{{ mas_namespace }}-internal-ca-issuer"

# We will use the IBM Cloud CLI to upgrade OCP version to 4.8
cluster_type: "{{ lookup('env', 'CLUSTER_TYPE') }}"
cluster_name: "{{ lookup('env', 'CLUSTER_NAME') }}"

# cpd upgrade vars
# https://www.ibm.com/docs/en/cloud-paks/cp-data/4.0?topic=35-upgrading-cloud-pak-data
# cpd35_meta_namespace: cpd-meta-ops
cpd_meta_namespace: ibm-common-services
cpd_services_namespace: cpd-meta-ops # reuse existing namespace that contains cpd v3.5 services
cpd_registry: cp.icr.io
cpd_registry_user: cp

# This is only used for cpd35, we have to use cp4d_hack_worker_nodes to set up the global image pull secret needed by cpd40
cpd_entitlement_key: "{{ lookup('env', 'CPD_ENTITLEMENT_KEY') }}"

cpd_storage_class: 'ibmc-file-gold-gid'
cpd_block_storage_class: 'ibmc-block-gold'

cpd_services:
  - db2wh

db2wh_upgrade_version: "11.5.7.0"
