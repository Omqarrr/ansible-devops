---
- hosts: localhost
  any_errors_fatal: true
  vars:
    # mas_channel will define which cert-manager to be installed by this playbook so we ensure compatibility with MAS deployment
    mas_channel: "{{ lookup('env', 'MAS_CHANNEL') | default('8.x', True)}}"
    cluster_type: "{{ lookup('env', 'CLUSTER_TYPE') | default('', True) }}"
    cluster_name: "{{ lookup('env', 'CLUSTER_NAME') | default('', True) }}"

    # --- Dev catalog settings ----------------------------------------------------------------------------------------
    # Only required when using the development catalog sources for pre-release installation
    # These are used to set up image pull secret in the openshift-marketplace namespace
    artifactory_username: "{{ lookup('env', 'W3_USERNAME') | lower }}"
    artifactory_apikey: "{{ lookup('env', 'ARTIFACTORY_APIKEY') }}"

    # -- Grafana Setup ------------------------------------------------------------------------------------------------
    grafana_user: "{{ lookup('env', 'GRAFANA_USER') }}"
    grafana_password: "{{ lookup('env', 'GRAFANA_PASSWORD') }}"
    grafana_storage_class: "{{ lookup('env', 'GRAFANA_STORAGE_CLASS') }}"
    grafana_storage_size: "{{ lookup('env', 'GRAFANA_STORAGE_SIZE') | default('10Gi', True) }}"
    grafana_datasource_url: "{{ lookup('env', 'GRAFANA_DATASOURCE_URL') | default('https://thanos-querier.openshift-monitoring.svc:9091', True) }}"
    # -----------------------------------------------------------------------------------------------------------------

    sbo_channel: "{{ lookup('env', 'SBO_CHANNEL') | default('preview', true) }}"
    sbo_startingcsv: "{{ lookup('env', 'SBO_STARTINGCSV') | default('service-binding-operator.v0.8.0', true) }}"
    sbo_plan_approval: "{{ lookup('env', 'SBO_PLAN_APPROVAL') | default('Manual', true) }}"

    # Settings to update openshift monitoring to define a specific storage class for Prometheus logs
    prometheus_retention_period: "{{ lookup('env', 'PROMETHEUS_RETENTION_PERIOD') | default('15d', true) }}"
    prometheus_storage_class: "{{ lookup('env', 'PROMETHEUS_STORAGECLASS_NAME') | default('ibmc-block-gold', true) }}"
    prometheus_storage_size: "{{ lookup('env', 'PROMETHEUS_STORAGE_SIZE') | default('300Gi', true) }}"
    prometheus_alertmgr_storage_class: "{{ lookup('env', 'PROMETHEUS_ALERTMGR_STORAGECLASS_NAME') | default('ibmc-file-gold-gid', true) }}"
    prometheus_alertmgr_storage_size: "{{ lookup('env', 'PROMETHEUS_STORAGE_SIZE') | default('20Gi', true) }}"

    # --- OAuth settings ----------------------------------------------------------------------------------------
    # optionally you can provide information to setup github oauth in the cluster
    # oauth:
    #   github_client_secret_value: "{{ lookup('env', 'OAUTH_CLIENT_SECRET') }}"
    #   github_client_id_value: "{{ lookup('env', 'OAUTH_CLIENT_ID') }}"
    #   github_hostname: github.ibm.com
    #   groups:
    #     - name: group1
    #       users:
    #         - user1
    #         - user2
    #       groups_cluster_rolebindings:
    #         - cluster-admin
    #   organizations:
    #     - org1
    #     - org2
  roles:
    - ibm.mas_devops.ocp_setup_mas_deps
    - ibm.mas_devops.ocp_setup_monitoring
    # Commenting ocs_setup_role as it now requires Openshift Data Foundation:
    # Installing OpenShift Data Foundation on IBM Cloud by using OperatorHub is not supported.
    # You can install OpenShift Data Foundation by using the IBM Cloud add-on.
    # For more information, see https://cloud.ibm.com/docs/openshift?topic=openshift-ocs-storage-prep
    # - ibm.mas_devops.ocp_setup_ocs
