---
- hosts: localhost
  any_errors_fatal: true
  vars:
    cpd_meta_namespace: "{{ lookup('env', 'CPD_NAMESPACE') | default('cpd-meta-ops', true) }}"

    # TODO: consolidate db2w_ prefix to align with existing db2wh_ prefix already in use
    # TODO: remove the legact cp4d_db2wh role, rename the cp4d_db2wh_api role to replace it

    # Configure Db2 instance
    # -----------------------------------------------------------------------------------------------------------------
    cp4d_db2wh_instance_name: "{{ lookup('env', 'DB2WH_INSTANCE_NAME') }}" # e.g. db2w-iot or db2w-manage
    cp4d_db2_addon_version: "{{ lookup('env', 'DB2WH_ADDON_VERSION') | default('11.5.5.1-cn3-x86_64', true) }}"
    db2w_table_org: "{{ lookup('env', 'DB2WH_TABLE_ORG') | default('ROW', true) }}" # e.g ROW or COLUMN

    # Configure meta storage for db2 .. despite the name, this ONLY applies to Db2 in CP4D
    # TODO: rename this to reflect that it's only affecting db2
    cp4d_meta_storage_class: "{{ lookup('env', 'DB2WH_META_STORAGE_CLASS') }}"
    cp4d_meta_storage_size_gb: "{{ lookup('env', 'DB2WH_META_STORAGE_SIZE_GB') | default(20, true) }}"

    # Configure CP4D user storage .. despite the name, this ONLY applies to Db2 in CP4D
    # TODO: rename this to reflect that it's only affecting db2
    cp4d_user_storage_class: "{{ lookup('env', 'DB2WH_USER_STORAGE_CLASS') }}"
    cp4d_user_storage_size_gb: "{{ lookup('env', 'DB2WH_USER_STORAGE_SIZE_GB') | default(100, true) }}"

    # Configure CP4D backup storage .. despite the name, this ONLY applies to Db2 in CP4D
    # TODO: rename this to reflect that it's only affecting db2
    cp4d_backup_storage_class: "{{ lookup('env', 'DB2WH_BACKUP_STORAGE_CLASS') }}"
    cp4d_backup_storage_size_gb: "{{ lookup('env', 'DB2WH_BACKUP_STORAGE_SIZE_GB') | default(100, true) }}"

    # TODO: This username is actually the username of Db2, not CP4D
    # TODO: You can't have a defaault password of "password", this needs to be auto-generated if not provided
    cp4d_admin_username: "{{ lookup('env', 'CPD_ADMIN_USER')  | default('admin', true) }}"
    cp4d_admin_password: "{{ lookup('env', 'CPD_ADMIN_PASSWORD')  | default('password', true) }}"

    # Create the MAS JdbcCfg & Secret resource definitions
    mas_instance_id: "{{ lookup('env', 'MAS_INSTANCE_ID') }}"
    mas_config_dir: "{{ lookup('env', 'MAS_CONFIG_DIR') }}"

    mas_config_scope: "{{ lookup('env', 'MAS_CONFIG_SCOPE') | default('system', true) }}" # Supported values are "system", "ws", "app", or "wsapp"
    mas_workspace_id: "{{ lookup('env', 'MAS_WORKSPACE_ID') }}" # Necessary for ws and wsapp scopes
    mas_application_id: "{{ lookup('env', 'MAS_APP_ID') }}" # Necessary for app and wsapp scopes

    # TODO: If we are supporting more than just system scope, then we need logic built in here to
    # generate unique names for ws, app, and wsapp that incorporates the {{mas_workspace_id}} and/or {{mas_application_id}} fields.
    db2wh_cfg_file: /tmp/jdbccfg-cp4ddb2wh-system.yaml

  roles:
    - ibm.mas_devops.cp4d_db2wh_api
